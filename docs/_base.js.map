{
  "version": 3,
  "sources": ["../node_modules/@devcapsule/adapter/dist/esm/style.js", "../node_modules/@devcapsule/adapter/dist/esm/adapter.js", "../src/deficon.ts", "../docs-src/_base.ts"],
  "sourcesContent": ["/**\n *  Append style to parentNode\n * @constructor\n * @param {HTMLStyleElement} styleNode - Style node to set CSS string.\n * @param {string} css - CSS string\n * @param {HTMLElement} parentNode - Parent node to add style node.\n */\nexport function _addStyle(styleNode, css, parentNode = document.head) {\n    styleNode.textContent = css;\n    parentNode.append(styleNode);\n}\nexport function addStyle(css) {\n    const styleNode = document.createElement('style');\n    _addStyle(styleNode, css);\n    return styleNode;\n}\n", "import { _addStyle } from './style.js';\nclass DOMError extends Error {\n    constructor(message) {\n        super();\n        this.message = message;\n        this.name = 'DOMError';\n    }\n}\nfunction AdapterMixin(Base) {\n    var _a;\n    return _a = class extends Base {\n            static addStyle(css) {\n                const styleNode = document.createElement('style');\n                styleNode.setAttribute('component', this.name);\n                _addStyle(styleNode, css, document.head);\n            }\n            static define(tagName) {\n                // To extends this function, sub-elements must be defined before call\n                // this function as `super.define(tagName);`\n                try {\n                    customElements.define(tagName, this);\n                }\n                catch (error) {\n                    if (error instanceof DOMException) {\n                        throw new DOMError(`DOMException: '${this.name}' ` +\n                            `has already been defined to tag '${this.tagName}'`);\n                    }\n                }\n                this.tagName = tagName;\n                this.defineStyle();\n            }\n            ;\n            static defineStyle() {\n                let css = ``;\n                const styles = [\n                    ...Object.getPrototypeOf(this).styles,\n                    ...this.styles\n                ];\n                for (const style of styles) {\n                    let selector = this.tagName;\n                    if (style['class_'] !== '') {\n                        selector = `${this.tagName}.${style['class_']}`;\n                    }\n                    css += `\\n${selector} { ${style.css} }`;\n                }\n                this.addStyle(css);\n            }\n            ;\n            static tagStyle(css) {\n                // In case that component has been defined,\n                // put css directly into html.\n                if (this.tagName) {\n                    this.addStyle(`\\n${this.tagName} { ${css} }`);\n                }\n                this.styles = this.styles.concat({ class_: '', css: css });\n            }\n            static classStyle(class_, css) {\n                // In case that component has been defined,\n                // put css directly into html.\n                if (this.tagName) {\n                    this.addStyle(`\\n${this.tagName}.${class_} { ${css} }`);\n                }\n                this.styles = this.styles.concat({ class_: class_, css: css });\n            }\n            static _generate_id() {\n                if (this.idsCount > 10000) {\n                    throw new Error(`${this} instance exceed 10,000. Too many instances.`);\n                }\n                let id = '';\n                let gen_times = 0;\n                while (this.ids[id] === true) {\n                    id = `${this.name}-${Math.floor(Math.random() * this.max_id).toString(16)}`;\n                    gen_times++;\n                }\n                this.ids[id] = true;\n                this.idsCount++;\n                return id;\n            }\n            constructor(...args) {\n                super();\n                this._class = this.constructor;\n                this._id = this._class._generate_id();\n            }\n            addStyle(style) {\n                this.classList.add(this._id);\n                let selector = this.classList.value.replace(/ /g, '.');\n                const styleNode = document.createElement('style');\n                _addStyle(styleNode, `${this.tagName}.${selector} { ${style} }`, this);\n            }\n        },\n        _a.styles = [\n            { class_: '', css: 'all: unset;' }\n        ],\n        _a._is_styled = false,\n        _a.max_id = Math.pow(16, 4) - 1,\n        _a.ids = {},\n        _a.idsCount = 0,\n        _a;\n}\nconst Adapter = AdapterMixin(HTMLElement);\nexport { Adapter, AdapterMixin, DOMError };\n", "type Constructor<T = {}> = new (...args: any[]) => T;\n\nclass Icon {\n    static url: string;\n\n    set name(name: string) {\n        this._element.setAttribute('name', name);\n        this.render();\n    }\n\n    get name() {\n        return this._element.getAttribute('name');\n    }\n\n    _element: HTMLElement;\n    _class: typeof Icon;\n\n    constructor(element: HTMLElement) {\n        this._class = this.constructor as typeof Icon;\n        this._element = element;\n        this.render();\n\n        const observer = new MutationObserver((mutationRecords, observer) => {\n            this.observerCallback(mutationRecords, observer)\n        })\n        observer.observe(this._element, {attributes: true});\n    }\n\n    observerCallback(\n            mutationRecords: MutationRecord[],\n            observer: MutationObserver) {\n                \n        for (const mutation of mutationRecords) {\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === \"name\") {\n                    this.render();\n                }\n            }\n        }\n    }\n\n    render() {\n        if (!this._class.url) {\n            return;\n        }\n        let svg = document.createElementNS(\n            \"http://www.w3.org/2000/svg\",\n            \"svg\");\n        let use = document.createElementNS(\n            'http://www.w3.org/2000/svg',\n            'use');\n\n        this._element.innerHTML = '';\n        svg.style.width = '1em';\n        svg.style.height = '1em';\n        this._element.appendChild(svg);\n        use.setAttributeNS(\n            'http://www.w3.org/1999/xlink',\n            'xlink:href',\n            `${this._class.url}#${this.name}`);\n        svg.appendChild(use);\n    }\n}\n\ninterface IconParam {\n    url: string;\n    deficonField?: any;    \n}\n\nfunction DefIconMixin<TBase extends Constructor<HTMLElement>>(\n        Base: TBase,\n        {url, deficonField='deficon'}: IconParam\n    ) {\n\n    class _Icon extends Icon {};\n    _Icon.url = url;\n\n    return class DefIconMixin extends Base {\n        [key: string]: any;\n\n        constructor(...args: any[]) {\n            super(...args);\n            this[deficonField] = new _Icon(this);\n        };\n    }\n}\n\nfunction DefIcon(param: IconParam) {\n    return class DefIcon extends DefIconMixin(HTMLElement, param) {};\n}\n\nexport { DefIconMixin, DefIcon };", "import { Adapter, AdapterMixin } from \"@devcapsule/adapter\";\nimport { DefIcon } from \"@devcapsule/deficon\";\n\nconst _v = 2;\n\nconst __file_url = new URL(import.meta.url);\nconst icon_url = new URL(`./asset/icon.svg?_v=${_v}`, __file_url);\n\nconst css = String.raw;\n\nconst color = {\n    palette: {\n        blue: \"#3584e4\",\n        green: \"#33d17a\",\n        yellow: \"#f6d32d\",\n        orange: \"#ff7800\",\n        red: \"#e01b24\",\n        purple: \"#9141ac\",\n        brown: \"#986a44\",\n        light: \"#deddda\",\n        dark: \"#3d3846\"\n    }\n}\n\nclass Container extends Adapter {};\nContainer.tagStyle(css`\n    display: block;\n    margin: auto;\n    width: 90%;\n    max-width: 1000px;\n    min-width: 300px;\n    box-sizing: border-box;\n`);\n\nclass Paragraph extends Adapter {};\nParagraph.tagStyle(css`\n    display: block;\n    margin: auto;\n    width: 100%;\n    max-width: 80ch;\n    width: 100%;\n`)\n\nclass CodeBlock extends Adapter {};\nCodeBlock.tagStyle(css`\n    display: block;\n    & [el=\"title\"] {\n        display: inline-flex;\n        align-items: center;\n        line-height: 2;\n        border: 2px solid ${color.palette.blue};\n        border-top-left-radius: 5px;\n        border-top-right-radius: 5px;\n        padding-left: 0.5rem;\n        padding-right: 0.5rem;\n        margin-left: 0.5rem;\n        font-size: 0.8rem;\n        position: relative;\n        top: 2px;\n        z-index: -1;\n    }\n    & pre {\n        margin: 0;\n    }\n`)\n\nclass Icon extends AdapterMixin(\n    DefIcon({ url: icon_url.toJSON() })\n) {};\nIcon.tagStyle(`\n    fill: currentColor;\n`)\n\nexport { Container, Paragraph, CodeBlock, Icon, color };"],
  "mappings": "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",
  "names": ["_addStyle", "styleNode", "css", "parentNode", "__name", "DOMError", "__name", "message", "AdapterMixin", "Base", "_a", "css", "styleNode", "_addStyle", "tagName", "error", "styles", "style", "selector", "class_", "id", "gen_times", "args", "Adapter", "_Icon", "__name", "name", "element", "mutationRecords", "observer", "mutation", "svg", "use", "DefIconMixin", "url", "objectField", "Base", "__Icon", "args", "DefIcon", "param", "_v", "__file_url", "icon_url", "css", "color", "Container", "Adapter", "__name", "Paragraph", "CodeBlock", "Icon", "AdapterMixin", "DefIcon"]
}
